/* --- base --- */

body {
  font-family: sans-serif;
  line-height: 1.5;
  color: #222;
}

a {
  color: #0069ff;
}

img {
  max-width: 100%;
  vertical-align: top;
}

/* --- modules --- */

.level1-heading {
  padding: 30px 10px;
  font-size: 1.75rem;
  color: #fff;
  text-align: center;
  background-color: #e25c00;
}

.level1-heading__inner {
  position: relative;
  display: inline-block;
  /* テキストと下線を、わずかに上に移動 */
  transform: translateY(-15%);
}

.level1-heading__inner::after {
  position: absolute;
  bottom: -10px;
  left: 50%;
  width: 80px;
  height: 1px;
  content: "";
  background-color: currentColor;
  /* 下線のX座標を左に寄せる */
  transform: translateX(-50%);
}

.level2-heading {
  padding-bottom: 10px;
  font-size: 1.75rem;
  font-weight: bold;
  border-bottom: 4px solid #e25c00;
}

.level3-heading {
  padding-bottom: 6px;
  font-size: 1.5rem;
  font-weight: bold;
  border-bottom: 2px solid #e25c00;
}

.level4-heading {
  padding-left: 6px;
  font-size: 1.25rem;
  font-weight: bold;
  border-left: 2px solid #e25c00;
}

.btn {
  /* 親の文字揃え（text-align）を継承する。親の左右中央と同期する */
  display: inline-block;
  width: 300px;
  /* 親ボックスの横幅を限界にする */
  max-width: 100%;
  /* 文字量が多い場合溢れてしまうので、height を指定しない。padding でスタイリングする */
  padding: 20px 10px;
  font-size: 1.123rem;
  color: #fff;
  text-align: center;
  text-decoration: none;
  background-color: #e25c00;
  /* ホバー時の枠線を、ホバー前から確保しておく */
  border: 2px solid transparent;
  /* box-shadow: 左右px 上下px ぼかし 色 */
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);
  transition: 0.25s;
}

.btn:focus,
.btn:hover {
  color: #e25c00;
  background-color: #fff;
  /* currentColor: color を引き継ぐ */
  border-color: currentColor;
}

/* `MindBEMding` の Modifier は、ハイフンx2で表現する */
.btn--arrow-right {
  /* position: absolute を使う時は、脳死で親要素に relative を指定 */
  position: relative;
  padding-right: 2em;
  padding-left: 1.38em;
}

/* after 擬似要素.. 要素の直後にコンテンツを追加。よく画像を追加したりする */
.btn--arrow-right::after {
  position: absolute;
  /* 上端から50%の位置（中央）に下げる。 */
  top: 50%;
  right: 0.83em;
  font-family: "Font Awesome 5 Free", sans-serif;
  font-weight: 900;
  content: "\f061";
  /* translateY が無いとアイコンの上端が要素の中央になる。アイコン自体の中央を上に寄せる（-50%） */
  transform: translateY(-50%);
}

.btn--gentle {
  color: #222;
  background-color: lightgoldenrodyellow;
}

.btn--gentle:focus,
.btn--gentle:hover {
  color: #222;
  border-color: lightgoldenrodyellow;
}

.rounded-btn {
  /* 親の文字揃え（text-align）を継承する。親の左右中央と同期する */
  display: inline-block;
  width: 236px;
  /* 親ボックスの横幅を限界にする */
  max-width: 100%;
  /* 文字量が多い場合溢れてしまうので、height を指定しない */
  padding: 15px 10px;
  font-size: 1.123rem;
  color: #fff;
  text-align: center;
  text-decoration: none;
  background-color: #e25c00;
  /* ホバー時の枠線を、ホバー前から確保しておく */
  border: 2px solid transparent;
  /* 通常の btn と異なり box-shadow が無い。ただし
   * border-bottom-color / border-radius がある */
  border-bottom-color: #d40152;
  border-radius: 10px;
  transition: 0.25s;
}

.rounded-btn:focus,
.rounded-btn:hover {
  color: #e25c00;
  background-color: #fff;
  /* currentColor: color を引き継ぐ */
  border-color: currentColor;
}

.before-icon-btn {
  position: relative;
  display: inline-block;
  /* padding を px で指定すると、フォントサイズが大きくなるにつれて相対的にスペースが詰まる */
  padding: 0.2em 0.3em;
  color: #e25c00;
  text-decoration: none;
  border: 1px solid currentColor;
  transition: 0.25s;
}

.before-icon-btn:focus,
.before-icon-btn:hover {
  color: #fff;
  background-color: #e25c;
}

.before-icon-btn::before {
  display: inline-block;
  margin-right: 0.5em;
  font-family: "Font Awesome 5 Free", sans-serif;
  font-weight: 900;
}

.before-icon-btn--download::before {
  content: "\f019";
}

.before-icon-btn--zoom::before {
  content: "\f00e";
}

.before-icon::before {
  display: inline-block;
  margin-right: 0.15em;
  font-family: "Font Awesome 5 Free", sans-serif;
  font-weight: 400;
  color: #e25c00;
}

.before-icon--pdf::before {
  content: "\f1c1";
}

.before-icon--chevron-left::before {
  width: 0.375em;
  height: 0.375rem;
  content: "";
  border-bottom: 0.125em solid #e25c00;
  border-left: 0.125em solid #e25c00;
  transform: rotate(45deg) translateY(-30%);
}

.label {
  display: inline-block;
  padding: 0.2em 0.3em;
  font-size: 0.75rem;
  font-weight: bold;
  color: #fff;
  background-color: #e25c00;
  border: 2px solid transparent;
}

.label--link {
  text-decoration: none;
  transition: 0.25s;
}

.label--link:focus,
.label--link:hover {
  color: #e25c00;
  background-color: #fff;
  border-color: currentColor;
}

.rounded-label {
  display: inline-block;
  padding: 0.3em 0.9em;
  font-size: 0.75rem;
  font-weight: bold;
  color: #fff;
  background-color: #e25c00;
  border-radius: 1em;
}

/* composite modules */

.media {
  display: flex;
  align-items: center;
}

.media__img-wrapper {
  /* flex: 伸長比 縮小比 ベースサイズ
   * ex. フレックスコンテナ（.media）を縮小して、ベースサイズより小さくなった場合、ベースサイズ x 1 の比率で分割される */
  flex: 0 1 27.58333%;
  margin-right: 3.33333%;
}

.media__img {
  width: 100%;
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);
}

.media__body {
  /* flex: 1 = flex: 1 1 0 */
  flex: 1;
}

/* 最後の要素（文章の部分）の下余白をリセットする
 * > .. 直下の子要素を指定。半角空白で区切った場合は、孫でも対象になる */
.media__body > *:last-child {
  margin-bottom: 0;
}

.media__title {
  margin-bottom: 10px;
  font-size: 1.123rem;
  font-weight: bold;
}

@media screen and (max-width: 768px) {
  .media {
    /* media の `display: flex` を解除する */
    display: block;
  }
  .media__img-wrapper {
    margin-right: 0;
    margin-bottom: 20px;
  }
}

.media--reverse {
  flex-direction: row-reverse;
}

.media--reverse .media__img-wrapper {
  margin-right: 0;
}

.media--reverse .media__body {
  margin-right: 3.33333%;
  text-align: right;
}

@media screen and (max-width: 768px) {
  .media--reverse .media__body {
    margin-right: 0;
  }
}

.card {
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);
}

.card__img-wrapper {
  position: relative;
  /* img に position: absolute を使用しているため、height で高さを確保できない
   * 56.25% の指定によりおおよそ 16:9 になる */
  padding-top: 56.25%;
  overflow: hidden;
}

.card__img {
  position: absolute;
  top: 50%;
  width: 100%;
  transform: translateY(-50%);
}

.card__body {
  padding: 15px;
}

.card__body > *:last-child {
  margin-bottom: 0;
}

.card__title {
  margin-bottom: 5px;
  font-size: 1.125rem;
  font-weight: bold;
}

.card__txt {
  color: #777;
}

.cards {
  display: flex;
  flex-wrap: wrap;
  /* justify-content: space-around; */
}

.cards--col3 {
  /* 各 element（cards__item） で 30px 余白を設けている
   * 最終行の下の余白は不要なため、block（cards--col3）側で相殺する */
  margin-bottom: -30px;
}

.cards--col4 {
  margin-bottom: -20px;
}

.cards--col3 > .cards__item {
  width: 31.707%;
  margin-right: 2.43902%;
  margin-bottom: 30px;
}

.cards--col4 > .cards__item {
  width: 23.78%;
  margin-right: 1.62602%;
  margin-bottom: 20px;
}

.cards--col3 > .cards__item:nth-of-type(3n) {
  margin-right: 0;
}

.cards--col4 > .cards__item:nth-of-type(4n) {
  margin-right: 0;
}

@media screen and (max-width: 768px) {
  .cards > .cards__item {
    width: 100%;
    margin-right: 0;
    margin-bottom: 20px;
  }

  .cards > .cards__item:last-child {
    margin-bottom: 0;
  }
}

.horizontal-table {
  /* スクロール用の modifier を切り出すための block
   * 以下は外枠.. */
  border: 1px solid #ddd;
}

.horizontal-table__inner {
  width: 100%;
}

.horizontal-table__header {
  width: 20%;
  padding: 15px;
  font-weight: bold;
  vertical-align: middle;
  background-color: #efefef;
  /* 各行の下線 */
  border-bottom: 1px solid #ddd;
}

.horizontal-table__text {
  padding: 15px;
  /* 各行の下線 */
  border-bottom: 1px solid #ddd;
}

.horizontal-table__row:last-child .horizontal-table__header,
.horizontal-table__row:last-child .horizontal-table__text {
  /* 最終行の下線は除去。外枠の border に任せる */
  border-bottom-width: 0;
}

@media screen and (max-width: 768px) {
  /* 水平スクロールを MindBEMding の modifier で実装 */
  .horizontal-table--md-scroll {
    overflow-x: auto;
    border-right-width: 0;
  }
  .horizontal-table--md-scroll .horizontal-table__header,
  .horizontal-table--md-scroll .horizontal-table__text {
    /* white-space: 改行／タブ／スペースの扱いを定義
     * nowrap は、自動改行をOFF */
    white-space: nowrap;
  }
  .horizontal-table--md-scroll .horizontal-table__text {
    border-right: 1px solid #ddd;
  }
}

.vertical-table {
  /* 外枠 */
  border: 1px solid #ddd;
}

/* table タグに付与 */
.vertical-table__inner {
  width: 100%;
  text-align: center;
  table-layout: fixed;
}

.vertical-table__header-row {
  background-color: #efefef;
}

.vertical-table__header {
  padding: 15px;
  font-weight: bold;
  text-align: center;
  border-right: 1px solid #ddd;
  border-bottom: 1px solid #ddd;
}

.vertical-table__text {
  padding: 15px;
  text-align: center;
  border-right: 1px solid #ddd;
  border-bottom: 1px solid #ddd;
}

.vertical-table__header:last-child,
.vertical-table__text:last-child {
  /* last-child >> "兄弟要素"の、最後の要素に適用される（兄弟がいないと適用されないらしい）
   * 右端の枠を非表示 */
  border-right-width: 0;
}

.vertical-table__text-row:last-child .vertical-table__text {
  /* 下端の枠を非表示 */
  border-bottom-width: 0;
}

@media screen and (max-width: 768px) {
  .vertical-table {
    overflow-x: auto;
    border-right-width: 0;
  }
  .vertical-table__inner {
    width: auto;
    /* 下が無いと safari の表示がめっちゃ崩れた */
    min-width: 100%;
  }
  .vertical-table__header,
  .vertical-table__text {
    white-space: nowrap;
  }
  .vertical-table__header:last-child,
  .vertical-table__text:last-child {
    border-right-width: 1px;
  }
}

.cross-table {
  border: 1px solid #ddd;
}

.cross-table__inner {
  width: 100%;
  table-layout: fixed;
}

.cross-table__header {
  padding: 15px;
  font-weight: bold;
  text-align: center;
  background-color: #efefef;
  border-right: 1px solid #ddd;
  border-bottom: 1px solid #ddd;
}

.cross-table__text {
  padding: 15px;
  text-align: center;
  border-right: 1px solid #ddd;
  border-bottom: 1px solid #ddd;
}

.cross-table__header:last-child,
.cross-table__text:last-child {
  border-right-width: 0;
}

.cross-table__text-row:last-child .cross-table__text {
  border-bottom-width: 0;
}

@media screen and (max-width: 768px) {
  .cross-table {
    /* メディアクエリで横スクロールする場合１
     * table 親の div に対して設定する */
    overflow-x: auto;
    border-right-width: 0;
  }
  .cross-table__inner {
    /* メディアクエリで横スクロールする場合２
     * table 自体への設定。safari の表示崩れを回避 */
    width: auto;
    min-width: 100%;
  }
  .cross-table__header,
  .cross-table__text {
    /* メディアクエリで横スクロールする場合３
     * 各セルの自動改行を抑止 */
    white-space: nowrap;
  }
  .cross-table__header:last-child,
  .cross-table__text:last-child {
    border-right-width: 0;
  }
  .cross-table__header--md-sticky {
    /* メディアクエリで横スクロールする場合４
     * sticky */
    position: sticky;
    left: 0;
  }
}

.pager {
  /* ページネーション１ - flex（x2）で実装する場合
   * （型として覚えておく） */
  display: flex;
  overflow-x: auto;
}

.pager__inner {
  /* ページネーション２ - flex（x2）で実装する場合
   * （型として覚えておく） */
  display: flex;
  margin-right: auto;
  margin-left: auto;
}

.pager__inner > *:last-child {
  margin-right: 0;
}

.pager__item {
  margin-right: 15px;
  list-style: none;
}

.pager__link {
  /* テキストを上下中央揃えするための、良くある方法（上3行）
   * display: flex 〜 justify-content: center */
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  color: #e25c00;
  text-decoration: none;
  border: 1px solid currentColor;
  transition: 0.25s;
}

.pager__link:focus,
.pager__link:hover {
  color: #fff;
  background-color: #e25c00;
  opacity: 0.75;
}

.pager__link--active {
  color: #fff;
  pointer-events: none;
  background-color: #e25c00;
}

/* 親の tab-navigation はメディアクエリで使用
 * ※ table の時と同様に、横幅を縮めた時の、横スクロール用 */
.tab-navigation__inner {
  display: flex;
  /* flex コンテナ用のプロパティ
   * - flex-wrap:       flex アイテムを複数行にする
   * - align-items:     縦の位置揃え
   * - justify-content: 横の位置揃え */
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  margin-bottom: -10px;
}

.tab-navigation__item {
  list-style: none;
}

.tab-navigation__link {
  /* 親要素を、インラインレイアウト（横並び）にする */
  display: inline-block;
  padding: 0 30px 10px 30px;
  margin-bottom: 10px;
  color: #777;
  text-decoration: none;
  border-bottom: 4px solid #efefef;
  transition: 0.25s;
}

.tab-navigation__link:focus,
.tab-navigation__link:hover {
  color: #e25c00;
  border-bottom-color: currentColor;
  opacity: 0.75;
}

.tab-navigation__link--active {
  color: #e25c00;
  pointer-events: none;
  border-bottom-color: currentColor;
}

@media screen and (max-width: 768px) {
  .tab-navigation {
    overflow-x: auto;
  }
  .tab-navigation__inner {
    flex-wrap: nowrap;
    justify-content: flex-start;
    margin-bottom: 0;
    white-space: nowrap;
  }
}

/* dd タグ（質問に対するアンサー）に適用 */
.faq > *:last-child {
  margin-bottom: 0;
}

.faq__row {
  /* position: absolute を使う時は、親要素に
   * position: relative を使うのが定石 */
  position: relative;
  /* box-sizing: border-box
   * と指定すると、width / height がパディングとボーダーを含んだ値になる
   * デフォルトは content-box */
  /* box-sizing: content-box; */
  display: flex;
  align-items: flex-start;
  min-height: 45px;
  padding-left: 60px;
  margin-left: 5px;
}

.faq__row--question {
  margin-bottom: 15px;
  font-size: 1.125rem;
  font-weight: bold;
}

.faq__row--answer {
  padding-bottom: 20px;
  margin-bottom: 20px;
  border-bottom: 1px solid #ddd;
}

.faq__icon {
  position: absolute;
  top: 0;
  left: 0;
  width: 45px;
  height: 45px;
  font-weight: normal;
  line-height: 45px;
  text-align: center;
  border-radius: 50%;
}

.faq__icon--question {
  color: #fff;
  background-color: #e25c00;
}

.faq__icon--answer {
  color: #e25c00;
  background: #efefef;
}

.faq__question-text {
  padding-top: 10px;
}

/* 
.faq__answer-body {
  padding-top: 12px;
}
*/

.faq__answer-body > *:last-child {
  margin-bottom: 0;
}

.faq__answer-text {
  margin: 10px 0 20px 0;
}
/* --- helper --- */

.m-1 {
  margin: 0.25rem;
}

.my-1 {
  margin: 0.25rem 0;
}

.mb-1 {
  margin-bottom: 0.25rem;
}

.m-2 {
  margin: 0.5rem;
}

.my-2 {
  margin: 0.5rem 0;
}

.mb-2 {
  margin-bottom: 0.5rem;
}
