@import "./fontawesome/css/all.min.css";

$theme-color: #e25c00;
$letter-color: #fff;

$breakpoints: (
  m: "screen and (max-width: 768px)",
  l: "screen and (min-width: 1200px)",
);

@mixin media($point) {
  @media #{map-get($breakpoints, $point)} {
    @content;
  }
}

/* --- base --- */

body {
  font-family: sans-serif;
  line-height: 1.5;
  color: #222;
}

a {
  color: #0069ff;
}

img {
  max-width: 100%;
  vertical-align: top;
}

/* --- modules --- */

.level1-heading {
  padding: 30px 10px;
  font-size: 1.75rem;
  color: $letter-color;
  text-align: center;
  background-color: $theme-color;
  &__inner {
    position: relative;
    display: inline-block;
    /* テキストと下線を、わずかに上に移動 */
    transform: translateY(-15%);
    &::after {
      position: absolute;
      bottom: -10px;
      left: 50%;
      width: 80px;
      height: 1px;
      content: "";
      background-color: currentColor;
      /* 下線のX座標を左に寄せる */
      transform: translateX(-50%);
    }
  }
}

.level2-heading {
  padding-bottom: 10px;
  font-size: 1.75rem;
  font-weight: bold;
  border-bottom: 4px solid $theme-color;
}

.level3-heading {
  padding-bottom: 6px;
  font-size: 1.5rem;
  font-weight: bold;
  border-bottom: 2px solid $theme-color;
}

.level4-heading {
  padding-left: 6px;
  font-size: 1.25rem;
  font-weight: bold;
  border-left: 2px solid $theme-color;
}

.btn {
  /* 親の文字揃え（text-align）を継承する。親の左右中央と同期する */
  display: inline-block;
  width: 300px;
  /* 親ボックスの横幅を限界にする */
  max-width: 100%;
  /* 文字量が多い場合溢れてしまうので、height を指定しない。padding でスタイリングする */
  padding: 20px 10px;
  font-size: 1.123rem;
  color: $letter-color;
  text-align: center;
  text-decoration: none;
  background-color: $theme-color;
  /* ホバー時の枠線を、ホバー前から確保しておく */
  border: 2px solid transparent;
  /* box-shadow: 左右px 上下px ぼかし 色 */
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);
  transition: 0.25s;
  &:focus,
  &:hover {
    color: $theme-color;
    background-color: $letter-color;
    /* currentColor: color を引き継ぐ */
    border-color: currentColor;
  }
  /* +++ 矢印付きのボタン +++
   * `MindBEMding` の Modifier は、ハイフンx2で表現 */
  &--arrow-right {
    /* position: absolute を使う時は、脳死で親要素に relative を指定 */
    position: relative;
    padding-right: 2em;
    padding-left: 1.38em;
    /* after 擬似要素.. 要素の直後にコンテンツを追加。よく画像を追加したりする */
    &::after {
      position: absolute;
      // 上端から50%の位置（中央）に下げる。
      top: 50%;
      right: 0.83em;
      font-family: "Font Awesome 5 Free", sans-serif;
      font-weight: 900;
      content: "\f061";
      // content: fa-content($fa-var-arrow-right);
      // translateY が無いとアイコンの上端が要素の中央になる。アイコン自体の中央を上に寄せる（-50%）
      transform: translateY(-50%);
    }
  }
  /* +++ 黄色のボタン +++ */
  &--gentle {
    color: #222;
    background-color: lightgoldenrodyellow;
    &:focus,
    &:hover {
      color: #222;
      border-color: lightgoldenrodyellow;
    }
  }
}

.rounded-btn {
  /* 親の文字揃え（text-align）を継承する。親の左右中央と同期する */
  display: inline-block;
  width: 236px;
  /* 親ボックスの横幅を限界にする */
  max-width: 100%;
  /* 文字量が多い場合溢れてしまうので、height を指定しない */
  padding: 15px 10px;
  font-size: 1.123rem;
  color: $letter-color;
  text-align: center;
  text-decoration: none;
  background-color: $theme-color;
  /* ホバー時の枠線を、ホバー前から確保しておく */
  border: 2px solid transparent;
  /* 通常の btn と異なり box-shadow が無い。ただし
   * border-bottom-color / border-radius がある */
  border-bottom-color: #d40152;
  border-radius: 10px;
  transition: 0.25s;
  &:focus,
  &:hover {
    color: $theme-color;
    background-color: $letter-color;
    /* currentColor: color を引き継ぐ */
    border-color: currentColor;
  }
}

.before-icon-btn {
  position: relative;
  display: inline-block;
  /* padding を px で指定すると、フォントサイズが大きくなるにつれて相対的にスペースが詰まってしまう */
  padding: 0.2em 0.5em;
  color: $theme-color;
  text-decoration: none;
  border: 1px solid currentColor;
  transition: 0.25s;
  &:focus,
  &:hover {
    color: $letter-color;
    background-color: #e25c;
  }
  &::before {
    display: inline-block;
    margin-right: 0.5em;
    font-family: "Font Awesome 5 Free", sans-serif;
    font-weight: 900;
  }
  /* +++ ダウンロードアイコン +++ */
  &--download::before {
    content: "\f019";
  }
  /* +++ 虫眼鏡アイコン +++ */
  &--zoom::before {
    content: "\f00e";
  }
}

/* 要素の前後にアイコンを追加する標準的な方法 -> 擬似要素 */
.before-icon {
  &::before {
    display: inline-block;
    margin-right: 0.15em;
    font-family: "Font Awesome 5 Free", sans-serif;
    font-weight: 400;
    color: $theme-color;
  }
  /* +++ pdf アイコン +++ */
  &--pdf::before {
    content: "\f1c1";
  }
  /* +++ 左向きの山の形アイコン +++
   * CSS 図形（手作り） */
  &--chevron-left::before {
    width: 0.375em;
    height: 0.375rem;
    content: "";
    border-bottom: 0.125em solid $theme-color;
    border-left: 0.125em solid $theme-color;
    transform: rotate(45deg) translateY(-30%);
  }
}

.label {
  display: inline-block;
  padding: 0.2em 0.3em;
  font-size: 0.75rem;
  font-weight: bold;
  color: $letter-color;
  background-color: $theme-color;
  border: 2px solid transparent;
  /* +++ ラベル（リンク） +++ */
  &--link {
    text-decoration: none;
    transition: 0.25s;
    &:focus,
    &:hover {
      color: $theme-color;
      background-color: $letter-color;
      border-color: currentColor;
    }
  }
}

.rounded-label {
  display: inline-block;
  padding: 0.3em 0.9em;
  font-size: 0.75rem;
  font-weight: bold;
  color: $letter-color;
  background-color: $theme-color;
  border-radius: 1em;
}

/* composite modules */
@include media(m) {
  .only-lg {
    display: none;
  }
}

.junbotron {
  /* メディアクエリ適用時の、違和感を防止する試み
   * （あまり違いがみられないような..） */
  height: calc(69.44444vw - 233.33333px);
  /* height: 50vw; */
  background-position: center center;
  background-size: cover;
  &__inner {
    position: relative;
    /* 以下の組み合わせは、左右中央揃えを指す。1つの block と捉えることも可
     * （その場合、個別に使用することを踏まえて padding が必要）
     * - max-width: 9999px
     * - margin-left: auto
     * - margin-right: auto */
    max-width: 1230px;
    height: 100%;
    margin-right: auto;
    margin-left: auto;
  }
  &__title {
    position: absolute;
    top: 50%;
    left: 0;
    padding: 40px;
    font-size: calc(1.81818vw + 14.18182px);
    color: $letter-color;
    background-color: rgba(0, 0, 0, 0.2);
    transform: translateY(-50%);
  }
  @include media(l) {
    & {
      height: 600px;
    }
    &__title {
      font-size: 2.25rem;
    }
  }
  @include media(m) {
    & {
      height: 300px;
    }
    &__title {
      left: 50%;
      width: 90%;
      padding: 15px;
      font-size: 1.25rem;
      text-align: center;
      transform: translate(-50%, -50%);
    }
  }
}

.media {
  $block: &;
  display: flex;
  align-items: center;
  &__img-wrapper {
    /* flex: 伸長比 縮小比 ベースサイズ
     * ex. フレックスコンテナ（.media）を縮小して、ベースサイズより小さくなった場合、ベースサイズ x 1 の比率で分割される */
    flex: 0 1 27.58333%;
    margin-right: 3.33333%;
  }
  &__img {
    width: 100%;
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);
  }
  &__body {
    /* flex: 1 = flex: 1 1 0 */
    flex: 1;
    /* 最後の要素（文章の部分）の下余白をリセットする
     * > .. 直下の子要素を指定。半角空白で区切った場合は、孫でも対象になる */
    > *:last-child {
      margin-bottom: 0;
    }
  }
  &__title {
    margin-bottom: 10px;
    font-size: 1.123rem;
    font-weight: bold;
  }
  /* +++ 左右逆のメディア +++ */
  &--reverse {
    flex-direction: row-reverse;
    #{$block}__img-wrapper {
      margin-right: 0;
    }
    #{$block}__body {
      margin-right: 3.33333%;
      text-align: right;
    }
  }
  @include media(m) {
    & {
      /* media の `display: flex` を解除する */
      display: block;
    }
    &__img-wrapper {
      margin-right: 0;
      margin-bottom: 20px;
    }
    &--reverse {
      #{$block}__body {
        margin-right: 0;
      }
    }
  }
}

.card {
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);
  &__img-wrapper {
    position: relative;
    /* img に position: absolute を使用しているため、height で高さを確保できない
     * 56.25% の指定によりおおよそ 16:9 になる */
    padding-top: 56.25%;
    overflow: hidden;
  }
  &__img {
    position: absolute;
    top: 50%;
    width: 100%;
    transform: translateY(-50%);
  }
  &__body {
    padding: 15px;
    > *:last-child {
      margin-bottom: 0;
    }
  }
  &__title {
    margin-bottom: 5px;
    font-size: 1.125rem;
    font-weight: bold;
  }
  &__txt {
    color: #777;
  }
}

.cards {
  $block: &;
  display: flex;
  flex-wrap: wrap;
  /* justify-content: space-around; */
  &--col3 {
    /* 各 element（cards__item） で 30px 余白を設けている
     * 最終行の下の余白は不要なため、block（cards--col3）側で相殺する */
    margin-bottom: -30px;
    > #{$block}__item {
      width: 31.707%;
      margin-right: 2.43902%;
      margin-bottom: 30px;
      &:nth-of-type(3n) {
        margin-right: 0;
      }
    }
  }
  &--col4 {
    margin-bottom: -20px;
    > #{$block}__item {
      width: 23.78%;
      margin-right: 1.62602%;
      margin-bottom: 20px;
      &:nth-of-type(4n) {
        margin-right: 0;
      }
    }
  }
  @include media(m) {
    & {
      > #{$block}__item {
        width: 100%;
        margin-right: 0;
        margin-bottom: 20px;
        &:last-child {
          margin-bottom: 0;
        }
      }
    }
  }
}

$tbl-header-color: #efefef;
$tbl-border-color: #ddd;

.horizontal-table {
  $block: &;
  /* スクロール用の modifier を切り出すための block
   * 以下は外枠.. */
  border: 1px solid $tbl-border-color;
  &__inner {
    width: 100%;
  }
  &__header {
    width: 20%;
    padding: 15px;
    font-weight: bold;
    vertical-align: middle;
    background-color: $tbl-header-color;
    /* 各行の下線 */
    border-bottom: 1px solid $tbl-border-color;
  }
  &__text {
    padding: 15px;
    /* 各行の下線 */
    border-bottom: 1px solid $tbl-border-color;
  }
  &__row:last-child {
    #{$block}__header,
    #{$block}__text {
      /* 最終行の下線は除去。外枠の border に任せる */
      border-bottom-width: 0;
    }
  }
  @include media(m) {
    /* 水平スクロールを MindBEMding の modifier で実装 */
    &--md-scroll {
      overflow-x: auto;
      border-right-width: 0;
      #{$block}__header,
      #{$block}__text {
        /* white-space: 改行／タブ／スペースの扱いを定義
         * nowrap は、自動改行をOFF */
        white-space: nowrap;
      }
      #{$block}__text {
        border-right: 1px solid $tbl-border-color;
      }
    }
  }
}

.vertical-table {
  $block: &;
  /* 外枠 */
  border: 1px solid $tbl-border-color;
  /* table タグに付与 */
  &__inner {
    width: 100%;
    text-align: center;
    table-layout: fixed;
  }
  &__header-row {
    background-color: $tbl-header-color;
  }
  &__header {
    padding: 15px;
    font-weight: bold;
    text-align: center;
    border-right: 1px solid $tbl-border-color;
    border-bottom: 1px solid $tbl-border-color;
  }
  &__text {
    padding: 15px;
    text-align: center;
    border-right: 1px solid $tbl-border-color;
    border-bottom: 1px solid $tbl-border-color;
  }
  &__header:last-child,
  &__text:last-child {
    /* last-child >> "兄弟要素"の、最後の要素に適用される（兄弟がいないと適用されないらしい）
    * 右端の枠を非表示 */
    border-right-width: 0;
  }
  &__text-row:last-child &__text {
    /* 下端の枠を非表示 */
    border-bottom-width: 0;
  }
  @include media(m) {
    & {
      overflow-x: auto;
      border-right-width: 0;
    }
    &__inner {
      width: auto;
      /* 下が無いと safari の表示がめっちゃ崩れた */
      min-width: 100%;
    }
    &__header,
    &__text {
      white-space: nowrap;
      &:last-child {
        border-right-width: 1px;
      }
    }
  }
}

.cross-table {
  border: 1px solid $tbl-border-color;
  &__inner {
    width: 100%;
    table-layout: fixed;
  }
  &__header {
    padding: 15px;
    font-weight: bold;
    text-align: center;
    background-color: $tbl-header-color;
    border-right: 1px solid $tbl-border-color;
    border-bottom: 1px solid $tbl-border-color;
  }
  &__text {
    padding: 15px;
    text-align: center;
    border-right: 1px solid $tbl-border-color;
    border-bottom: 1px solid $tbl-border-color;
  }
  &__header:last-child,
  &__text:last-child {
    border-right-width: 0;
  }
  &__text-row:last-child &__text {
    border-bottom-width: 0;
  }
  @include media(m) {
    & {
      /* メディアクエリで横スクロールする場合１
       * table 親の div に対して設定する */
      overflow-x: auto;
      border-right-width: 0;
    }
    &__inner {
      /* メディアクエリで横スクロールする場合２
       * table 自体への設定。safari の表示崩れを回避 */
      width: auto;
      min-width: 100%;
    }
    &__header,
    &__text {
      /* メディアクエリで横スクロールする場合３
       * 各セルの自動改行を抑止 */
      white-space: nowrap;
      &:last-child {
        border-right-width: 0;
      }
    }
    &__header--md-sticky {
      /* メディアクエリで横スクロールする場合４
       * sticky */
      position: sticky;
      left: 0;
    }
  }
}

.pager {
  /* ページネーション１ - flex（x2）で実装する場合
   * （型として覚えておく） */
  display: flex;
  overflow-x: auto;
  &__inner {
    /* ページネーション２ - flex（x2）で実装する場合
     * （型として覚えておく） */
    display: flex;
    margin-right: auto;
    margin-left: auto;
    > *:last-child {
      margin-right: 0;
    }
  }
  &__item {
    margin-right: 15px;
    list-style: none; /* 先頭の ・ を消す */
  }
  &__link {
    /* テキストを上下中央揃えするための、良くある方法（上3行）
     * display: flex 〜 justify-content: center */
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    color: $theme-color;
    text-decoration: none;
    border: 1px solid currentColor;
    transition: 0.25s;
    &:focus,
    &:hover {
      color: $letter-color;
      background-color: $theme-color;
      opacity: 0.75;
    }
    &--active {
      color: $letter-color;
      pointer-events: none;
      background-color: $theme-color;
    }
  }
}

.tab-navigation {
  /* 親の tab-navigation はメディアクエリで使用
   * ※ table の時と同様に、横幅を縮めた時の、横スクロール用 */
  &__inner {
    display: flex;
    /* flex コンテナ用のプロパティ
     * - flex-wrap:       flex アイテムを複数行にする
     * - align-items:     縦の位置揃え
     * - justify-content: 横の位置揃え */
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    margin-bottom: -10px;
  }
  &__item {
    list-style: none;
  }
  &__link {
    /* 親要素を、インラインレイアウト（横並び）にする */
    display: inline-block;
    padding: 0 30px 10px 30px;
    margin-bottom: 10px;
    color: #777;
    text-decoration: none;
    border-bottom: 4px solid #efefef;
    transition: 0.25s;
    &:focus,
    &:hover {
      color: $theme-color;
      border-bottom-color: currentColor;
      opacity: 0.75;
    }
    &--active {
      color: $theme-color;
      pointer-events: none;
      border-bottom-color: currentColor;
    }
  }
  @include media(m) {
    & {
      overflow-x: auto;
    }
    &__inner {
      flex-wrap: nowrap;
      justify-content: flex-start;
      margin-bottom: 0;
      white-space: nowrap;
    }
  }
}

/* dd タグ（質問に対するアンサー）に適用 */
.faq > *:last-child {
  margin-bottom: 0;
}

.faq__row {
  /* position: absolute を使う時は、親要素に
   * position: relative を使うのが定石 */
  position: relative;
  /* box-sizing: border-box
   * と指定すると、width / height がパディングとボーダーを含んだ値になる
   * デフォルトは content-box */
  /* box-sizing: content-box; */
  display: flex;
  align-items: flex-start;
  min-height: 45px;
  padding-left: 60px;
  margin-left: 5px;
  &--question {
    margin-bottom: 15px;
    font-size: 1.125rem;
    font-weight: bold;
  }
  &--answer {
    padding-bottom: 20px;
    margin-bottom: 20px;
    border-bottom: 1px solid #ddd;
  }
}

.faq__icon {
  position: absolute;
  top: 0;
  left: 0;
  width: 45px;
  height: 45px;
  font-weight: normal;
  line-height: 45px;
  text-align: center;
  border-radius: 50%;
  &--question {
    color: $letter-color;
    background-color: $theme-color;
  }
  &--answer {
    color: $theme-color;
    background: #efefef;
  }
}

.faq__question-text {
  padding-top: 10px;
}

.faq__answer-body > *:last-child {
  margin-bottom: 0;
}

.faq__answer-text {
  margin: 10px 0 20px 0;
}

/* + >> 隣接セレクタ.. 隣り合った要素に適用
 * ※ body -> title の順になっている場合 */
.accordion__body + .accordion__title {
  margin-top: 10px;
}

.accordion__btn {
  position: relative;
  /* button は元々 inline-block */
  display: block;
  width: 100%;
  padding: 10px 40px 10px 15px;
  font-size: 1.125rem;
  color: $letter-color;
  text-align: left;
  cursor: pointer;
  background-color: $theme-color;
  border: 2px solid $theme-color;
  transition: 0.25s;
  /* 横線を表す。right で位置を指定 */
  &::before {
    position: absolute;
    top: 50%;
    right: 15px;
    display: block;
    width: 20px;
    height: 2px;
    content: "";
    background-color: currentColor;
    transform: translateY(-50%);
  }
  /* 縦線を表す。right で位置を指定 */
  &::after {
    position: absolute;
    top: 50%;
    right: 24px;
    display: block;
    width: 2px;
    height: 20px;
    content: "";
    background-color: currentColor;
    transform: translateY(-50%);
  }
  &:focus,
  &:hover {
    color: $theme-color;
    background-color: $letter-color;
  }
  /* accordion__btn::after（縦線）を上書きしている */
  &--active::after {
    content: none;
  }
}

/* ※ display: none -> display: block の場合は、アニメーションが効かない
 * opacity: 0 ／ max-height: 0 -> opacity: 1 ／ max-height: 100vh に変更 */
.accordion__body {
  // display: none;
  max-height: 0;
  margin-left: 0;
  /* 以下が無いと、閉じている時に大きな余白が残る */
  overflow: hidden;
  border: 1px solid #ddd;
  opacity: 0;
  transition: 0.5s;
  > *:last-child {
    margin-bottom: 0;
  }
  &--active {
    // display: block;
    max-height: 100vh;
    opacity: 1;
  }
}

.accordion__text {
  padding: 15px;
}

.vertical-posts__item {
  padding: 15px 0;
  list-style: none;
  border-bottom: 1px solid #ddd;
  &:first-child {
    padding-top: 0;
  }
}

.vertical-posts__header {
  margin-bottom: 10px;
  > *:last-child {
    margin-right: 0;
  }
}

.vertical-posts__date {
  margin-right: 10px;
  font-size: 0.875rem;
}

.vertical-posts__title {
  text-decoration: none;
  &:focus,
  &:hover {
    text-decoration: underline;
  }
}

.vertical-posts__labels {
  /* ブラウザのデフォルトスタイル（padding-inline..）を打ち消す */
  padding-inline-start: 0;
  display: inline-flex;
  flex-wrap: wrap;
  margin-bottom: -10px;
  > *:last-child {
    margin-right: 0;
  }
}

.vertical-posts__label {
  margin: 0 10px 10px 0;
  list-style: none;
}

.horizontal-btn-list {
  display: flex;
  justify-content: center;
  > *:last-child {
    margin-right: 0;
  }
}

.horizontal-btn-list__item {
  flex: 1 1 0;
  max-width: 300px;
  margin-right: 20px;
  list-style: none;
}

.horizontal-btn-list__btn {
  /* 下の display 〜 justify-content + height: 100% で
   * 左右中央揃えと高さ揃え */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
}

.accordion__cards {
  width: 90%;
  margin: 0 auto 10px auto;
}

/* --- helper --- */

.m-1 {
  margin: 0.25rem;
}

.my-1 {
  margin: 0.25rem 0;
}

.mb-1 {
  margin-bottom: 0.25rem;
}

.m-2 {
  margin: 0.5rem;
}

.my-2 {
  margin: 0.5rem 0;
}

.mb-2 {
  margin-bottom: 0.5rem;
}
